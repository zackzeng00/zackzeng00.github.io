extends widget/base
block append link
  link(rel='stylesheet', href= url_for('/style/post.css'))
  link(rel='stylesheet', href= url_for('/style/highlight-theme-light.css'))
  script(src= url_for("/jslib/highlight.pack.js"))

block content
    - var tocContent = toc(page.content, {list_number: false})

    main.container.is-max-widescreen.content.section.post-page.pt-4.px-4
        .columns.is-flex-desktop.is-justify-content-center.is-flex-direction-row-reverse
            .column.is-3.is-hidden-mobile(class= tocContent.length < 1 && 'is-hidden')!= tocContent
            .column.is-9
                header.my-4
                    if page.tags && page.tags.length > 0
                        each tag in page.tags.toArray()
                            a(href= url_for(`/tags/${tag.name}`))
                                i.tag.post-item-tag= tag.name
                h1.mt-0.mb-1.is-family-serif= page.title
                if page.date
                    time.has-text-grey(datetime=page.date.toJSON())= date(page.date, date_format)
                article.mt-2.post-content!= page.content
                section.is-flex.is-justify-content-space-between.my-6
                    // em is empty placeholder
                    if page.prev
                        a.button.is-small.is-default(href= url_for(page.prev.path) title= page.prev.title)= __('prev')
                    else
                        em
                    if page.next
                        a.button.is-small.is-default(href= url_for(page.next.path) title= page.next.title)= __('next')
                if theme.comment_utteranc && theme.comment_utteranc.enable
                    article.mt-6.comment-container
                        script(
                            src="https://utteranc.es/client.js"
                            repo= theme.comment_utteranc.repo
                            issue-term= theme.comment_utteranc.issue_term || "pathname"
                            theme= theme.comment_utteranc.theme || "github-light"
                            label= theme.comment_utteranc.label
                            async
                        )
block script
  script.
      hljs.initHighlighting();

      var directory = document.querySelectorAll('.toc a')
      if (directory.length > 0) {
          var contentTocList = []
          var activeClassName = 'is-active'

          directory.forEach(function (link) {
              if (!link.href) return
              var id = decodeURI(link.href).split('#')[1]
              contentTocList.push(document.getElementById(id))
          })

          var DELAY = 150
          var needWait = false
          window.addEventListener('scroll', function (evt) {
              if (needWait) {
                  return
              }
              needWait = true
              var tocContainer = document.querySelector('.toc')
              setTimeout(function () {
                  var spacing = 60
                  var activeTopicEl = null
                  var scrollTop = window.pageYOffset
                  for (var i = 0; i < contentTocList.length; i++) {
                      var currentTopic = contentTocList[i]

                      if (currentTopic.offsetTop > scrollTop + spacing / 2) {
                          // jump to next loop
                          continue
                      }

                      if (!activeTopicEl) {
                          activeTopicEl = currentTopic
                      } else if (currentTopic.offsetTop + spacing >= activeTopicEl.offsetTop - spacing) {
                          activeTopicEl = currentTopic
                      }

                      var beforeActiveEl = document.querySelector('.toc' + ' .' + activeClassName)
                      beforeActiveEl && beforeActiveEl.classList.remove(activeClassName)

                      var selectTarget = '.toc a[href="#' + encodeURI(activeTopicEl.id) + '"]'
                      var direc = document.querySelector(selectTarget)
                      direc.classList.add(activeClassName)

                      var tocContainerHeight = tocContainer.getBoundingClientRect().height
                      if (direc.offsetTop >= tocContainerHeight - spacing) {
                          tocContainer.scrollTo({
                              // top: direc.offsetTop - spacing,
                              top: direc.offsetTop + 100 - tocContainerHeight,
                          })
                      }
                      else {
                          tocContainer.scrollTo({ top: 0 })
                      }
                  }
                  needWait = false
              }, DELAY)

          })

      }
